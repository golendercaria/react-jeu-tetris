{"version":3,"sources":["Menu.js","Grid.js","pieceCollection.js","NextPiece.js","LevelAndLine.js","TimeAndScore.js","touchAndHelper.js","Game.js","Modal.js","Options.js","App.js","serviceWorker.js","index.js"],"names":["Menu","_ref","actions","react_default","a","createElement","id","onClick","launchGame","launchOptions","Grid","grid","piece","projection","colorLine","length","y","x","Math","abs","colorizedEmptyCellule","projectionCoordinate","previousCordinate","coordinate","virtualY","posY","undefined","posX","push","getProjectionCoordinate","className","map","line","col","classes","mergeData","indexOf","color","key","join","pieceCollection","NextPiece","LevelAndLine","lvl","linePerLvl","TimeAndScore","score","globalTimer","time","sec_num","hours","floor","minutes","seconds","intToTime","toString","replace","touchAndHelper","touch","bottom","left","right","rotateLeft","rotateRight","helpers","Game","state","gridHeight","gridWidth","nbrCleanLine","nextPieceIndex","isLostGame","options","executeKeyCode","keyCode","_this","pieceMoveToXAxis","pieceMoveToYAxis","rotatePiece","keyupActions","e","multiple_key_pressed","index","key_pressed","splice","keydownActions","forEach","initGame","baseIntervalTimer","setInterval","window","addEventListener","setState","buildGrid","generateNextPieceIndex","generatePiece","launchTimer","lostGame","clearInterval","timer","removeEventListener","convertLvlToTime","interval","mergePieceToGrid","lvlChanged","virtualGrid","element","_element$split","split","_element$split2","Object","slicedToArray","_this$cleanGrid","cleanGrid","nbrLineCompleted","parseInt","pow","indexPieceCollection","pieceCanBeMove","deltaX","objectSpread","deltaY","sense","newGrid","isPositionUpdate","lineCompleted","i","unshift","makeCleanLine","_this2","this","JSON","parse","localStorage","getItem","random","width","_this3","props","launchMenu","src_LevelAndLine","src_NextPiece","src_Grid","src_TimeAndScore","Component","Modal","message","active","Options","captureTouch","modalActive","updateTouch","updateHelper","helper","setItem","stringify","src_Modal","keys","t","h","App","componentToLoaded","ReactGA","initialize","pageview","location","pathname","search","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8SAYeA,MAVf,SAAAC,GAA2B,IAAXC,EAAWD,EAAXC,QACf,OACCC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QACPH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,UAAQE,QAAU,kBAAML,EAAQM,eAAhC,QACAL,EAAAC,EAAAC,cAAA,UAAQE,QAAU,kBAAML,EAAQO,kBAAhC,4BCkIYC,MAvIf,SAAAT,GAA2C,IAA3BU,EAA2BV,EAA3BU,KAAMC,EAAqBX,EAArBW,MAAOC,EAAcZ,EAAdY,WAE5BF,EAkDD,SAA+BA,GAI9B,IAFA,IAAIG,EAAYH,EAAMA,EAAKI,OAAS,GAE3BC,EAAIL,EAAKI,OAAS,EAAGC,GAAK,EAAGA,IAAK,CAC1C,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAK,GAAGI,OAAQE,IAE/BN,EAAKK,GAAGC,IAAM,GAAsB,IAAjBH,EAAUG,KAChCN,EAAKK,GAAGC,IAA+B,EAA1BC,KAAKC,IAAIL,EAAUG,KAIlCH,EAAYH,EAAKK,GAGlB,OAAOL,EAjEAS,CAAsBT,GAE7B,IAAIU,EAAuB,GAK3B,OAJIT,GAASC,IACZQ,EAgEF,SAAiCV,EAAMC,GAKtC,IAHA,IAAIU,EAAoB,GACpBC,EAAa,GAERC,EAAWZ,EAAMa,KAAMD,EAAWb,EAAKI,OAAQS,IAAY,CAEnEF,EAAoBC,EACpBA,EAAa,GAEb,IAAK,IAAIP,EAAI,EAAGA,EAAIJ,EAAMD,KAAKI,OAAQC,IACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAMD,KAAK,GAAGI,OAAQE,IACzC,GAAIL,EAAMD,KAAKK,GAAGC,GAAK,EAAG,CAEzB,QAA2BS,IAAvBf,EAAKK,EAAIQ,GACZ,OAAOF,EAGR,GAAIX,EAAKK,EAAIQ,GAAUP,EAAIL,EAAMe,MAAQ,EACxC,OAAOL,EAGRC,EAAWK,KAAOZ,EAAIQ,EAAY,KAAOP,EAAIL,EAAMe,QAOvD,OAAOJ,EA7FiBM,CAAwBlB,EAAMC,IAIrDT,EAAAC,EAAAC,cAAA,OAAKC,GAAG,OAAOwB,UAAU,QAEvBnB,EAAKoB,IACF,SAACC,EAAMhB,GACR,OAAOgB,EAAKD,IACX,SAACE,EAAKhB,GAEL,IAAIiB,EAAU,GAyBd,OAvBU,IAANjB,GACHiB,EAAQN,KAAK,SAEA,OAAVhB,IAC2C,IAA1CA,EAAMuB,UAAUC,QAAQpB,EAAI,IAAMC,IACrCiB,EAAQN,KAAK,SAAWhB,EAAMyB,OAI5B1B,EAAKK,GAAGC,GAAK,IAChBiB,EAAQN,KAAK,wBAA0BjB,EAAKK,GAAGC,IAC/CN,EAAKK,GAAGC,GAAK,IAIqC,IAA/CI,EAAqBe,QAAQpB,EAAI,IAAMC,IAC1CiB,EAAQN,KAAK,cAGVjB,EAAKK,GAAGC,GAAK,GAChBiB,EAAQN,KAAK,SAAWjB,EAAKK,GAAGC,IAG1Bd,EAAAC,EAAAC,cAAA,QAAMiC,IAAKrB,EAAI,IAAMD,EAAGc,UAAWI,EAAQK,KAAK,aC5ChDC,EAAA,CACd,CACC,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,GACV,CAAC,EAAG,EAAG,EAAG,IAEX,CACC,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEN,CACC,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEN,CACC,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEN,CACC,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEN,CACC,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEN,CACC,CAAC,EAAE,GACH,CAAC,EAAE,KCCUC,MAjCf,SAAAxC,GAAoC,IAAfU,EAAeV,EAAfU,KAAM0B,EAASpC,EAAToC,MAE1B,OACClC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,sBACPH,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,SAAhB,cACA3B,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aAAawB,UAAU,QAE7BnB,EAAKoB,IACJ,SAACC,EAAMhB,GACN,OAAOgB,EAAKD,IACX,SAACE,EAAKhB,GAEL,IAAIiB,EAAU,GAUd,OARU,IAANjB,GACHiB,EAAQN,KAAK,SAGVjB,EAAKK,GAAGC,GAAK,GAChBiB,EAAQN,KAAK,SAAWS,GAGlBlC,EAAAC,EAAAC,cAAA,QAAMiC,IAAKrB,EAAI,IAAMD,EAAGc,UAAWI,EAAQK,KAAK,cCPjDG,MAff,SAAAzC,GAAgD,IAAxB0C,EAAwB1C,EAAxB0C,IAAKX,EAAmB/B,EAAnB+B,KAAMY,EAAa3C,EAAb2C,WAClC,OACCzC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBAAiBwB,UAAU,WAClC3B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,OACd3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,SAAhB,SACA3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,SAASa,IAE1BxC,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,QACd3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,SAAhB,QACA3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,SAASE,EAAzB,IAAgCY,MC2BrBC,MAff,SAAA5C,GAA8C,IAAtB6C,EAAsB7C,EAAtB6C,MAAOC,EAAe9C,EAAf8C,YAC9B,OACC5C,EAAAC,EAAAC,cAAA,OAAKC,GAAG,iBAAiBwB,UAAU,WAClC3B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,QACd3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,SAAhB,QACA3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,SAtBpB,SAAmBkB,GAClB,IAAIC,EAAUD,EACVE,EAAUhC,KAAKiC,MAAMF,EAAU,MAC/BG,EAAUlC,KAAKiC,OAAOF,EAAmB,KAARC,GAAiB,IAClDG,EAAUJ,EAAmB,KAARC,EAA2B,GAAVE,EAK1C,OAHIA,EAAU,KAAKA,EAAU,IAAIA,GAC7BC,EAAU,KAAMA,EAAU,IAAMA,GAEhCH,EAAQ,GACPA,EAAQ,KAAMA,EAAQ,IAAMA,GACzBA,EAAM,IAAIE,EAAQ,IAAIC,GAGvBD,EAAQ,IAAIC,EAQSC,CAAUP,KAEpC5C,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,SACd3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,SAAhB,SACA3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,SAAsBgB,EA7BhCS,WAAWC,QAAQ,0BAA2B,WCHzCC,EAAA,CACdC,MAAO,CACNC,OAAU,GACVC,KAAQ,GACRC,MAAS,GACTC,WAAc,GACdC,YAAe,IAEhBC,QAAS,CACRnD,YAAc,IC0aDoD,6MAvadC,MAAQ,CACPvD,KAAM,KACNwD,WAAY,GACZC,UAAW,GACXxD,MAAO,KACPyD,aAAc,EACd1B,IAAK,EACL2B,eAAgB,KAChBC,YAAY,EACZC,QAAS,GACT1B,MAAO,EACPF,WAAY,KAuBb6B,eAAiB,SAACC,GACjB,OAAQA,GACP,KAAKC,EAAKT,MAAMM,QAAQd,MAAnB,MAAmCiB,EAAKC,iBAAiB,GAC7D,MACD,KAAKD,EAAKT,MAAMM,QAAQd,MAAnB,KAAkCiB,EAAKC,kBAAkB,GAC7D,MACD,KAAKD,EAAKT,MAAMM,QAAQd,MAAnB,OAAoCiB,EAAKE,iBAAiB,GAC9D,MACD,KAAKF,EAAKT,MAAMM,QAAQd,MAAnB,YAAyCiB,EAAKG,YAAY,SAC9D,MACD,KAAKH,EAAKT,MAAMM,QAAQd,MAAnB,WAAwCiB,EAAKG,YAAY,YAMhEC,aAAe,SAACC,GACfL,EAAKM,sBAAuB,EAC5B,IAAIC,EAAQP,EAAKQ,YAAY/C,QAAQ4C,EAAEN,UACxB,IAAXQ,GACHP,EAAKQ,YAAYC,OAAOF,EAAO,MAIjCG,eAAiB,SAACL,IAC2B,IAAzCL,EAAKQ,YAAY/C,QAAQ4C,EAAEN,UAC7BC,EAAKQ,YAAYvD,KAAKoD,EAAEN,SAGrBC,EAAKQ,YAAYpE,OAAS,EAC7B4D,EAAKQ,YAAYG,QAChB,SAACZ,EAASQ,IAC0B,IAA9BP,EAAKM,sBAA4C,IAAVC,EAC3CP,EAAKM,sBAAuB,EAE5BN,EAAKF,eAAeC,KAKvBC,EAAKF,eAAeE,EAAKQ,YAAY,OAIvCI,SAAW,WAEVZ,EAAKa,kBAAoB,IACzBb,EAAK5B,YAAc,EAEnB0C,YAAY,WACXd,EAAK5B,eACJ,KAEF4B,EAAKQ,YAAc,GACnBR,EAAKM,sBAAuB,EAG5BS,OAAOC,iBAAiB,QAAShB,EAAKI,cACtCW,OAAOC,iBAAiB,UAAWhB,EAAKU,gBAExCV,EAAKiB,SAAS,CACbjF,KAAMgE,EAAKkB,YACXvB,eAAgBK,EAAKmB,yBACrBzB,aAAc,EACd1B,IAAK,EACL4B,YAAY,EACZzB,MAAM,GACJ,WACF6B,EAAKoB,gBAELpB,EAAKqB,mBAIPC,SAAW,WAEVC,cAAcvB,EAAKwB,OAEnBxB,EAAKiB,SAAS,CAAErB,YAAY,IAE5BmB,OAAOU,oBAAoB,QAASzB,EAAKI,cACzCW,OAAOU,oBAAoB,UAAWzB,EAAKU,mBAI5CW,YAAc,WACbrB,EAAKwB,MAAQV,YAAY,WACxBd,EAAKE,iBAAiB,IACpBF,EAAK0B,uBAGTA,iBAAmB,WAClB,IAAIC,EAAW3B,EAAKa,kBAA2C,IAAtBb,EAAKT,MAAMvB,IAAM,GAC1D,OAAQ2D,EAAW,IAAO,IAAMA,KAIjCT,UAAY,WAIX,IAFA,IAAIlF,EAAO,GAEFK,EAAI,EAAGA,EAAI2D,EAAKT,MAAMC,WAAYnD,IAAK,CAE/C,IADA,IAAIgB,EAAO,GACFf,EAAI,EAAGA,EAAI0D,EAAKT,MAAME,UAAWnD,IACzCe,EAAKJ,KAAK,GAEXjB,EAAKiB,KAAKI,GAGX,OAAOrB,KAIR4F,iBAAmB,WAElB,IAAIzD,EAAQ6B,EAAKT,MAAMpB,MACnBH,EAAMgC,EAAKT,MAAMvB,IACjB6D,GAAa,EACXC,EAAc9B,EAAKT,MAAMvD,KAC3B0D,EAAeM,EAAKT,MAAMG,aAE9BM,EAAKT,MAAMtD,MAAMuB,UAAUmD,QAAQ,SAAAoB,GAAW,IAAAC,EAC9BD,EAAQE,MAAM,KADgBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtC3F,EADsC6F,EAAA,GACnC5F,EADmC4F,EAAA,GAE7CJ,EAAYzF,GAAGC,GAAK0D,EAAKT,MAAMtD,MAAMyB,QAVd,IAAA2E,EAacrC,EAAKsC,UAAUR,GAA/CQ,EAbkBD,EAalBC,UAAWC,EAbOF,EAaPE,iBACjB7C,GAAgB6C,EAGZA,EAAmB,IAGtBpE,GAASqE,SAASjG,KAAKkG,IAAIF,EAAkB,GAAKvE,EAAMgC,EAAK0B,oBAGzDhC,GAAgBM,EAAKT,MAAMtB,aAC9ByB,EAAe,EACf1B,IACA6D,GAAa,EACbN,cAAcvB,EAAKwB,SAKrBxB,EAAKiB,SAAS,CAAEjF,KAAMsG,EAAWrG,MAAO,KAAMyD,eAAc1B,MAAKG,SAAS,WACzE6B,EAAKoB,gBACDS,GACH7B,EAAKqB,mBAURD,cAAgB,WAEf,IAAInF,EAAQ,CACZA,KAAa,GAETyG,EAAuB1C,EAAKT,MAAMI,eACtC1D,EAAMyB,MAAQgF,EAAuB,EAErCzG,EAAMD,KAAO6B,EAAgB6E,GAEJ,IAArBzG,EAAMD,KAAK,GAAG,IACjBC,EAAMa,OAGPb,EAAMe,KAAOT,KAAKiC,OAAQwB,EAAKT,MAAME,UAAYxD,EAAMD,KAAK,GAAGI,QAAU,GAEzEH,EAAMuB,UAAY,GAClB,IAAIZ,EAAaoD,EAAK2C,eAAe1G,IAClB,IAAfW,GACHX,EAAMuB,UAAYZ,EAClBoD,EAAKiB,SAAS,CAAEhF,QAAO0D,eAAgBK,EAAKmB,4BAE5CnB,EAAKsB,cAKPqB,eAAiB,SAAC1G,GAIjB,IAFA,IAAIW,EAAa,GAERP,EAAI,EAAGA,EAAIJ,EAAMD,KAAKI,OAAQC,IACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAMD,KAAK,GAAGI,OAAQE,IACzC,GAAIL,EAAMD,KAAKK,GAAGC,GAAK,EAAG,CAEzB,QAAwCS,IAApCiD,EAAKT,MAAMvD,KAAKK,EAAIJ,EAAMa,MAC7B,OAAO,EAGR,QAAwDC,IAApDiD,EAAKT,MAAMvD,KAAKK,EAAIJ,EAAMa,MAAMR,EAAIL,EAAMe,MAC7C,OAAO,EAGR,GAAIgD,EAAKT,MAAMvD,KAAKK,EAAIJ,EAAMa,MAAMR,EAAIL,EAAMe,MAAQ,EACrD,OAAO,EAGRJ,EAAWK,KAAOZ,EAAIJ,EAAMa,KAAQ,KAAOR,EAAIL,EAAMe,OAKxD,OAAOJ,KAIRqD,iBAAmB,SAAC2C,GAEnB,IAAI3G,EAAKkG,OAAAU,EAAA,EAAAV,CAAA,GAAQnC,EAAKT,MAAMtD,OAE5B,GAAc,OAAVA,EACH,OAAO,EAGRA,EAAMe,MAAQ4F,EAEd,IAAIhG,EAAaoD,EAAK2C,eAAe1G,IAClB,IAAfW,IACHX,EAAMuB,UAAYZ,EAClBoD,EAAKiB,SAAS,CAAChF,cAMjBiE,iBAAmB,SAAC4C,GAEnB,IAAI7G,EAAKkG,OAAAU,EAAA,EAAAV,CAAA,GAAQnC,EAAKT,MAAMtD,OAE5B,GAAc,OAAVA,EACH,OAAO,EAGRA,EAAMa,MAAQgG,EAEd,IAAIlG,EAAaoD,EAAK2C,eAAe1G,IAClB,IAAfW,GACHX,EAAMuB,UAAYZ,EAClBoD,EAAKiB,SAAS,CAAEhF,WAEhB+D,EAAK4B,sBAKPzB,YAAc,SAAC4C,GAEd,IAAI9G,EAAKkG,OAAAU,EAAA,EAAAV,CAAA,GAAQnC,EAAKT,MAAMtD,OAE5B,GAAc,OAAVA,EACH,OAAO,EAGR,IAAI+G,EAAU,GAEd,GAAc,UAAVD,EACH,IAAK,IAAIzG,EAAI,EAAGA,EAAIL,EAAMD,KAAK,GAAGI,OAAQE,IAAK,CAE9C,IADA,IAAIe,EAAO,GACFhB,EAAIJ,EAAMD,KAAKI,OAAS,EAAGC,GAAK,EAAGA,IAC3CgB,EAAKJ,KAAKhB,EAAMD,KAAKK,GAAGC,IAEzB0G,EAAQ/F,KAAKI,QAER,GAAe,SAAV0F,EACX,IAAK,IAAIzG,EAAIL,EAAMD,KAAK,GAAGI,OAAS,EAAGE,GAAK,EAAGA,IAAK,CAEnD,IADA,IAAIe,EAAO,GACFhB,EAAI,EAAGA,EAAIJ,EAAMD,KAAKI,OAAQC,IACtCgB,EAAKJ,KAAMhB,EAAMD,KAAKK,GAAGC,IAE1B0G,EAAQ/F,KAAMI,GAIhBpB,EAAMD,KAAOgH,EAEb,IAAIpG,EAAaoD,EAAK2C,eAAe1G,GACrC,IAAmB,IAAfW,EACHX,EAAMuB,UAAYZ,EAClBoD,EAAKiB,SAAS,CAAEhF,cACV,CAEN,IAAIgH,GAAmB,EAGnBhH,EAAMe,KAAO,GAChBf,EAAMe,KAAO,EACbiG,GAAmB,GACThH,EAAMD,KAAK,GAAGI,OAASH,EAAMe,KAAQgD,EAAKT,MAAME,WAC1DxD,EAAMe,KAAOgD,EAAKT,MAAME,UAAYxD,EAAMD,KAAK,GAAGI,OAClD6G,GAAmB,GACThH,EAAMa,KAAO,IACvBb,EAAMa,KAAO,EACbmG,GAAmB,GAGhBA,IAEgB,KADnBrG,EAAaoD,EAAK2C,eAAe1G,MAEhCA,EAAMuB,UAAYZ,EAClBoD,EAAKiB,SAAS,CAAEhF,eAMpBqG,UAAY,SAACtG,GAKZ,IAHA,IACIuG,EADAD,EAAY,GAGPjG,EAAI,EAAGA,EAAI2D,EAAKT,MAAMC,WAAYnD,IAAK,CAG/C,IADA,IAAI6G,GAAgB,EACX5G,EAAI,EAAGA,EAAI0D,EAAKT,MAAME,UAAWnD,IACtB,IAAfN,EAAKK,GAAGC,KACX4G,GAAgB,IAII,IAAlBA,GACHZ,EAAUrF,KAAKjB,EAAKK,IAKtBkG,EAAmBvC,EAAKT,MAAMC,WAAa8C,EAAUlG,OAErD,IAAK,IAAI+G,EAAI,EAAGA,EAAIZ,EAAkBY,IACrCb,EAAUc,QAASpD,EAAKqD,cAAcrD,EAAKT,MAAME,YAGlD,MAAO,CAAE6C,YAAWC,wGAtWD,IAAAe,EAAAC,KAEf1D,EAAU2D,KAAKC,MAAMC,aAAaC,QAAQ,mBAC9B,OAAZ9D,GAAgC,KAAZA,IACvBA,EAAUf,GAEXyE,KAAKtC,SAAS,CAAEpB,WAAW,WAG1ByD,EAAK1C,4DAMNG,OAAOU,oBAAoB,QAAS8B,KAAKnD,cACzCW,OAAOU,oBAAoB,UAAW8B,KAAK7C,iEA8J3C,OAAOnE,KAAKiC,MAAOjC,KAAKqH,SAAW/F,EAAgBzB,8CA4LtCyH,GAEb,IADA,IAAIxG,EAAO,GACFf,EAAI,EAAGA,EAAIuH,EAAOvH,IAC1Be,EAAKJ,KAAK,GAEX,OAAOI,mCAGC,IAAAyG,EAAAP,KAER,OAAIA,KAAKhE,MAAMK,WAEbpE,EAAAC,EAAAC,cAAA,OAAKC,GAAG,qBACPH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,SAAf,WAAgCoG,KAAKhE,MAAMpB,OAC3C3C,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QACPH,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAMkI,EAAKC,MAAMxI,QAAQyI,eAA1C,QACAxI,EAAAC,EAAAC,cAAA,UAAQE,QAAS,kBAAMkI,EAAKlD,aAA5B,gBAQHpF,EAAAC,EAAAC,cAAA,OAAKC,GAAG,gBACPH,EAAAC,EAAAC,cAACuI,EAAD,CAAcjG,IAAKuF,KAAKhE,MAAMvB,IAAKX,KAAMkG,KAAKhE,MAAMG,aAAczB,WAAYsF,KAAKhE,MAAMtB,aAE1D,OAA9BsF,KAAKhE,MAAMI,gBACXnE,EAAAC,EAAAC,cAACwI,EAAD,CAAWlI,KAAM6B,EAAgB0F,KAAKhE,MAAMI,gBAAiBjC,MAAO6F,KAAKhE,MAAMI,eAAiB,IAG5E,OAApB4D,KAAKhE,MAAMvD,MACVR,EAAAC,EAAAC,cAACyI,EAAD,CACCnI,KAAMuH,KAAKhE,MAAMvD,KACjBC,MAAOsH,KAAKhE,MAAMtD,MAClBC,WAAYqH,KAAKhE,MAAMM,QAAQR,QAAnB,aAGf7D,EAAAC,EAAAC,cAAC0I,EAAD,CAAcjG,MAAOoF,KAAKhE,MAAMpB,MAAOC,YAAamF,KAAKnF,sBAla1CiG,mBCOJC,MAdf,SAAAhJ,GAAoC,IAAnBiJ,EAAmBjJ,EAAnBiJ,QAASC,EAAUlJ,EAAVkJ,OACzB,OACChJ,EAAAC,EAAAC,cAAA,OAAKC,GAAG,QAAQwB,WAAuB,IAAXqH,EAAmB,OAAS,IACvDhJ,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,SACf3B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,kBACd3B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,WACboH,GAEF/I,EAAAC,EAAAC,cAAA,UAAQyB,UAAU,SAAlB,WCyFWsH,oNA7FdlF,MAAQ,CACPM,QAAS,CACRd,MAAO,CACNC,OAAU,GACVC,KAAQ,GACRC,MAAS,GACTC,WAAc,GACdC,YAAc,IAEfC,QAAS,CACRnD,YAAa,IAGfwI,cAAc,EACdC,aAAY,KAabjE,eAAiB,SAACL,GACjB,IAAgC,IAA5BL,EAAKT,MAAMmF,aAAwB,CACtC,IAAI3F,EAAQiB,EAAKT,MAAMM,QAAQd,MAC/BA,EAAOiB,EAAKT,MAAMmF,cAAiBrE,EAAEN,QACrCC,EAAKiB,SAAS,CAAElC,QAAO2F,cAAa,EAAOC,aAAY,QASzDC,YAAc,SAAC7F,GACdiB,EAAKiB,SAAS,CAACyD,aAAa3F,EAAO4F,aAAY,OAGhDE,aAAe,SAACC,GAEf,IAAIzF,EAAUW,EAAKT,MAAMM,QAAQR,SAET,IAApBA,EAAQyF,GACXzF,EAAQyF,IAAU,EAElBzF,EAAQyF,IAAU,EAGnB9E,EAAKiB,SAAS,CAAE5B,gGArCG,IAAAiE,EAAAC,KACf1D,EAAU2D,KAAKC,MAAMC,aAAaC,QAAQ,mBAC9B,OAAZ9D,GAAgC,KAAZA,IACvBA,EAAUf,GAEXyE,KAAKtC,SAAS,CAAEpB,WAAW,WAC1BkB,OAAOC,iBAAiB,UAAWsC,EAAK5C,iEAazCgD,aAAaqB,QAAQ,iBAAkBvB,KAAKwB,UAAUzB,KAAKhE,MAAMM,UACjEkB,OAAOU,oBAAoB,UAAW8B,KAAK7C,iDAoBnC,IAAAoD,EAAAP,KACR,OACC/H,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WAEPH,EAAAC,EAAAC,cAACuJ,EAAD,CAAOT,OAAQjB,KAAKhE,MAAMoF,YAAaJ,QAAS,qCAEhD/I,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,KAAGyB,UAAU,eAAb,kEACA3B,EAAAC,EAAAC,cAAA,+BAECyG,OAAO+C,KAAK3B,KAAKhE,MAAMM,QAAQd,OAAO3B,IAAI,SAAC+H,GAC1C,OAAO3J,EAAAC,EAAAC,cAAA,UAAQyB,UAAW,UAAYgI,EAAGvJ,QAAS,kBAAMkI,EAAKc,YAAYO,IAAIxH,IAAK,SAAWwH,GAC5F3J,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,UAChB3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,SAASgI,EAAzB,KAA8BrB,EAAKvE,MAAMM,QAAQd,MAAMoG,GAAvD,QAIH3J,EAAAC,EAAAC,cAAA,+BAECyG,OAAO+C,KAAK3B,KAAKhE,MAAMM,QAAQR,SAASjC,IAAI,SAACgI,GAC5C,OAAO5J,EAAAC,EAAAC,cAAA,UAAQyB,UAAW,UAAYiI,EAAGxJ,QAAS,kBAAMkI,EAAKe,aAAaO,IAAIzH,IAAK,UAAYyH,GAC9F5J,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,UAChB3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,WAChB3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,SAASiI,EAAzB,MACoC,IAAlCtB,EAAKvE,MAAMM,QAAQR,QAAQ+F,GAAe,KAAO,MADnD,QAOH5J,EAAAC,EAAAC,cAAA,UAAQyB,UAAU,OAAOvB,QAAU,kBAAMkI,EAAKC,MAAMxI,QAAQyI,eAA5D,gBAzFkBK,qBC6DPgB,6MAzDd9F,MAAQ,CACP+F,kBAAmB,KACnB/J,QAAS,QAYVM,WAAa,WACZmE,EAAKiB,SAAS,CACbqE,kBAAmBhG,EACnB/D,QAAS,CACRyI,WAAY,kBAAMhE,EAAKgE,oBAK1BlI,cAAgB,WACfkE,EAAKiB,SAAS,CACbqE,kBAAmBb,EACnBlJ,QAAS,CACRyI,WAAY,kBAAMhE,EAAKgE,oBAK1BA,WAAa,WACZhE,EAAKiB,SAAS,CACbqE,kBAAmBjK,EACnBE,QAAS,CACRM,WAAY,kBAAMmE,EAAKnE,cACvBC,cAAe,kBAAMkE,EAAKlE,wGA9B5ByH,KAAKS,aAELuB,IAAQC,WAAW,kBACnBD,IAAQE,SAAS1E,OAAO2E,SAASC,SAAW5E,OAAO2E,SAASE,yCAmC5D,OACCpK,EAAAC,EAAAC,cAAA,OAAKC,GAAG,kBAE4B,OAAjC4H,KAAKhE,MAAM+F,mBACX9J,EAAAC,EAAAC,cAAA6H,KAAMhE,MAAM+F,kBAAZ,CAA8B/J,QAASgI,KAAKhE,MAAMhE,kBAnDtC8I,aCKEwB,QACW,cAA7B9E,OAAO2E,SAASI,UAEe,UAA7B/E,OAAO2E,SAASI,UAEhB/E,OAAO2E,SAASI,SAASC,MACvB,2DCZNC,IAASC,OAAOzK,EAAAC,EAAAC,cAACwK,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4b65f92c.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Menu({ actions }) {\n\treturn (\n\t\t<div id=\"menu\">\n\t\t\t<h1>Tetris</h1>\n\t\t\t<button onClick={ () => actions.launchGame() }>Play</button>\n\t\t\t<button onClick={ () => actions.launchOptions() }>Options</button>\n\t\t</div>\n\t)\n}\n\nexport default Menu;","import React from 'react'\n\nfunction Grid({ grid, piece, projection }) {\n\n\tgrid = colorizedEmptyCellule(grid)\n\n\tlet projectionCoordinate = []\n\tif (piece && projection ) { \n\t\tprojectionCoordinate = getProjectionCoordinate(grid, piece)\n\t}\n\n\treturn (\n\t\t<div id=\"grid\" className=\"grid\">\n\t\t\t{\n\t\t\t\tgrid.map(\n\t\t\t\t  \t(line, y) => { \n\t\t\t\t\t\treturn line.map(\n\t\t\t\t\t\t\t(col, x) => { \n\n\t\t\t\t\t\t\t\tlet classes = []\n\n\t\t\t\t\t\t\t\tif (x === 0) { \n\t\t\t\t\t\t\t\t\tclasses.push(\"first\")\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (piece !== null) {\n\t\t\t\t\t\t\t\t\tif (piece.mergeData.indexOf(y + \"_\" + x) !== -1) {\n\t\t\t\t\t\t\t\t\t\tclasses.push(\"color-\" + piece.color)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (grid[y][x] < 0) {\n\t\t\t\t\t\t\t\t\tclasses.push(\"colorizedEmptyCellule\" + grid[y][x])\n\t\t\t\t\t\t\t\t\tgrid[y][x] = 0\n\t\t\t\t\t\t\t\t} \n\n\n\t\t\t\t\t\t\t\tif (projectionCoordinate.indexOf(y + \"_\" + x) !== -1) {\n\t\t\t\t\t\t\t\t\tclasses.push(\"projection\")\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (grid[y][x] > 0) { \n\t\t\t\t\t\t\t\t\tclasses.push(\"color-\" + grid[y][x])\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn <span key={x + \"_\" + y} className={classes.join(\" \")}></span>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nfunction colorizedEmptyCellule(grid) { \n\n\tlet colorLine = grid[ grid.length - 1 ]\n\n\tfor (let y = grid.length - 2; y > -1; y--) {\n\t\tfor (let x = 0; x < grid[0].length; x++) {\n\n\t\t\tif (grid[y][x] <= 0 && colorLine[x] !== 0) {\n\t\t\t\tgrid[y][x] = Math.abs(colorLine[x]) * -1\n\t\t\t}\n\n\t\t}\n\t\tcolorLine = grid[y]\n\t}\n\t\n\treturn grid\n}\n\nfunction getProjectionCoordinate(grid, piece) { \n\t\n\tlet previousCordinate = []\n\tlet coordinate = []\n\n\tfor (let virtualY = piece.posY; virtualY < grid.length; virtualY++) { \n\n\t\tpreviousCordinate = coordinate\n\t\tcoordinate = []\n\n\t\tfor (let y = 0; y < piece.grid.length; y++) {\n\t\t\tfor (let x = 0; x < piece.grid[0].length; x++) {\n\t\t\t\tif (piece.grid[y][x] > 0) { \n\n\t\t\t\t\tif (grid[y + virtualY] === undefined) { \n\t\t\t\t\t\treturn previousCordinate\n\t\t\t\t\t}\n\n\t\t\t\t\tif (grid[y + virtualY][x + piece.posX] > 0) { \n\t\t\t\t\t\treturn previousCordinate\n\t\t\t\t\t}\n\n\t\t\t\t\tcoordinate.push( (y + virtualY) + \"_\" + (x + piece.posX) )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\treturn coordinate\n\n\n\t/*\n\tlet coordinate = []\n\n\tfor (let y = 0; y < piece.grid.length; y++) {\n\t\tfor (let x = 0; x < piece.grid[0].length; x++) {\n\t\t\tif (piece.grid[y][x] > 0) { \n\n\t\t\t\tif (virtualY <= 0) { \n\t\t\t\t\treturn false\n\t\t\t\t}\n\n\t\t\t\tif (grid[y + virtualY] === undefined) { \n\t\t\t\t\tvirtualY--\n\t\t\t\t\treturn getProjectionCoordinate(grid, piece, virtualY)\n\t\t\t\t}\n\n\t\t\t\tif (grid[y + virtualY][x + piece.posX] > 0) { \n\t\t\t\t\tvirtualY--\n\t\t\t\t\treturn getProjectionCoordinate(grid, piece, virtualY)\n\t\t\t\t\t//piece exist deja\n\t\t\t\t\t//recusif y--\n\t\t\t\t}\n\n\t\t\t\tcoordinate.push( (y + virtualY) + \"_\" + (x + piece.posX) )\n\t\t\t}\n\t\t}\n\t}\n\n\treturn coordinate*/\n\n}\n\n\nexport default Grid;","export default [\n\t[\n\t\t[0, 0, 0, 0],\n\t\t[1, 1, 1, 1],\n\t\t[0, 0, 0, 0],\n\t\t[0, 0, 0, 0]\n\t],\n\t[\n\t\t[0,0,0],\n\t\t[0,1,0],\n\t\t[1,1,1]\n\t],\n\t[\n\t\t[0,0,0],\n\t\t[1,1,1],\n\t\t[1,0,0]\n\t],\n\t[\n\t\t[0,0,0],\n\t\t[1,1,1],\n\t\t[0,0,1]\n\t],\n\t[\n\t\t[0,0,0],\n\t\t[0,1,1],\n\t\t[1,1,0]\n\t],\n\t[\n\t\t[0,0,0],\n\t\t[1,1,0],\n\t\t[0,1,1]\n\t],\n\t[\n\t\t[1,1],\n\t\t[1,1]\n\t]\n]","import React from 'react'\n\nfunction NextPiece({ grid, color }) {\n\t\n\treturn (\n\t\t<div id=\"wrapper_next_piece\">\n\t\t\t<span className=\"title\">NEXT PIECE</span>\n\t\t\t<div id=\"next_piece\" className=\"grid\">\n\t\t\t\t{\n\t\t\t\t\tgrid.map(\n\t\t\t\t\t\t(line, y) => { \n\t\t\t\t\t\t\treturn line.map(\n\t\t\t\t\t\t\t\t(col, x) => { \n\n\t\t\t\t\t\t\t\t\tlet classes = []\n\n\t\t\t\t\t\t\t\t\tif (x === 0) { \n\t\t\t\t\t\t\t\t\t\tclasses.push(\"first\")\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (grid[y][x] > 0) { \n\t\t\t\t\t\t\t\t\t\tclasses.push(\"color-\" + color)\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn <span key={x + \"_\" + y} className={classes.join(\" \")}></span>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default NextPiece;","import React from 'react'\n\nfunction LevelAndLine({ lvl, line, linePerLvl}) {\n\treturn (\n\t\t<div id=\"level_and_line\" className=\"ui-text\">\n\t\t\t<div className=\"lvl\">\n\t\t\t\t<span className=\"title\">LEVEL</span>\n\t\t\t\t<span className=\"value\">{lvl}</span>\n\t\t\t</div>\n\t\t\t<div className=\"line\">\n\t\t\t\t<span className=\"title\">LINE</span>\n\t\t\t\t<span className=\"value\">{line}/{linePerLvl}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default LevelAndLine;","import React from 'react'\n\nfunction formatNumber(n) {\n\treturn n.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.')\n}\n\nfunction intToTime(time){ \n\tvar sec_num = time\n\tvar hours   = Math.floor(sec_num / 3600);\n\tvar minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n\tvar seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n\tif (minutes < 10) {minutes = \"0\"+minutes;}\n\tif (seconds < 10) { seconds = \"0\" + seconds; }\n\t\n\tif (hours > 0) { \n\t\tif (hours < 10) { hours = \"0\" + hours; }\n\t\treturn hours+':'+minutes+':'+seconds;\n\t}\n\n\treturn minutes+':'+seconds;\n}\n\nfunction TimeAndScore({ score, globalTimer }) {\n\treturn (\n\t\t<div id=\"time_and_score\" className=\"ui-text\">\n\t\t\t<div className=\"time\">\n\t\t\t\t<span className=\"title\">TIME</span>\n\t\t\t\t<span className=\"value\">{intToTime(globalTimer)}</span>\n\t\t\t</div>\n\t\t\t<div className=\"score\">\n\t\t\t\t<span className=\"title\">SCORE</span>\n\t\t\t\t<span className=\"value\">{formatNumber(score)}</span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default TimeAndScore;","export default {\n\ttouch: {\n\t\t\"bottom\": 40,\n\t\t\"left\": 37,\n\t\t\"right\": 39,\n\t\t\"rotateLeft\": 89,\n\t\t\"rotateRight\": 88\n\t},\n\thelpers: {\n\t\t\"projection\": true\n\t}\n}","import React, { Component } from 'react'\nimport Grid from './Grid'\nimport pieceCollection from './pieceCollection'\nimport NextPiece from './NextPiece'\n\nimport LevelAndLine from './LevelAndLine'\nimport TimeAndScore from './TimeAndScore'\n\nimport touchAndHelper from \"./touchAndHelper\"\n\nclass Game extends Component{\n\n\tstate = {\n\t\tgrid: null,\n\t\tgridHeight: 20,\n\t\tgridWidth: 10,\n\t\tpiece: null,\n\t\tnbrCleanLine: 0,\n\t\tlvl: 1,\n\t\tnextPieceIndex: null,\n\t\tisLostGame: false,\n\t\toptions: {},\n\t\tscore: 0,\n\t\tlinePerLvl: 5\n\t}\n\n\t// preview next piece\n\tcomponentDidMount() { \n\n\t\tlet options = JSON.parse(localStorage.getItem(\"tetris_options\"))\n\t\tif (options === null || options === \"\") { \n\t\t\toptions = touchAndHelper\n\t\t}\n\t\tthis.setState({ options }, () => {\n\n\t\t\t//option ready launch game !\n\t\t\tthis.initGame()\n\n\t\t})\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"keyup\", this.keyupActions)\n\t\twindow.removeEventListener(\"keydown\", this.keydownActions)\n\t}\n\n\texecuteKeyCode = (keyCode) => {\n\t\tswitch (keyCode) { \n\t\t\tcase this.state.options.touch[\"right\"]: this.pieceMoveToXAxis(1)\n\t\t\t\tbreak\n\t\t\tcase this.state.options.touch[\"left\"]: this.pieceMoveToXAxis(-1)\n\t\t\t\tbreak\n\t\t\tcase this.state.options.touch[\"bottom\"]: this.pieceMoveToYAxis(1)\n\t\t\t\tbreak\n\t\t\tcase this.state.options.touch[\"rotateRight\"]: this.rotatePiece(\"right\")\n\t\t\t\tbreak\n\t\t\tcase this.state.options.touch[\"rotateLeft\"]: this.rotatePiece(\"left\")\n\t\t\t\tbreak\n\t\t\tdefault: break\n\t\t}\n\t}\n\n\tkeyupActions = (e) => {\n\t\tthis.multiple_key_pressed = false\n\t\tlet index = this.key_pressed.indexOf(e.keyCode)\n\t\tif (index !== -1) { \n\t\t\tthis.key_pressed.splice(index, 1)\n\t\t}\n\t}\n\n\tkeydownActions = (e) => {\n\t\tif(this.key_pressed.indexOf(e.keyCode) === -1){\n\t\t\tthis.key_pressed.push(e.keyCode)\n\t\t}\n\n\t\tif (this.key_pressed.length > 1) {\n\t\t\tthis.key_pressed.forEach(\n\t\t\t\t(keyCode, index) => {\n\t\t\t\t\tif ( this.multiple_key_pressed === false && index === 0) {\n\t\t\t\t\t\tthis.multiple_key_pressed = true\n\t\t\t\t\t} else { \n\t\t\t\t\t\tthis.executeKeyCode(keyCode)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\t\t} else { \n\t\t\tthis.executeKeyCode(this.key_pressed[0])\n\t\t}\n\t}\n\n\tinitGame = () => {\n\n\t\tthis.baseIntervalTimer = 1000\n\t\tthis.globalTimer = 0\n\n\t\tsetInterval(() => { \n\t\t\tthis.globalTimer++\n\t\t},1000)\n\n\t\tthis.key_pressed = []\n\t\tthis.multiple_key_pressed = false\n\n\t\t//keyboard bind\n\t\twindow.addEventListener(\"keyup\", this.keyupActions)\n\t\twindow.addEventListener(\"keydown\", this.keydownActions)\n\n\t\tthis.setState({\n\t\t\tgrid: this.buildGrid(),\n\t\t\tnextPieceIndex: this.generateNextPieceIndex(),\n\t\t\tnbrCleanLine: 0,\n\t\t\tlvl: 1,\n\t\t\tisLostGame: false,\n\t\t\tscore:0\n\t\t}, () => {\n\t\t\tthis.generatePiece()\n\n\t\t\tthis.launchTimer()\n\t\t})\n\t}\n\n\tlostGame = () => {\n\t\t//mettre fin au jeu\n\t\tclearInterval(this.timer)\n\t\t//set status lost game\n\t\tthis.setState({ isLostGame: true })\n\t\t//debind event\n\t\twindow.removeEventListener(\"keyup\", this.keyupActions)\n\t\twindow.removeEventListener(\"keydown\", this.keydownActions)\n\t}\n\n\t//TIMER FONCTION\n\tlaunchTimer = () => {\n\t\tthis.timer = setInterval(() => {\n\t\t\tthis.pieceMoveToYAxis(1)\n\t\t}, this.convertLvlToTime())\n\t}\n\n\tconvertLvlToTime = () => { \t\n\t\tlet interval = this.baseIntervalTimer - (this.state.lvl - 1) * 35\n\t\treturn (interval < 100) ? 100 : interval\n\t}\n\n\t//GRID FUNCTIONS\n\tbuildGrid = () => {\n\n\t\tlet grid = []\n\n\t\tfor (let y = 0; y < this.state.gridHeight; y++) {\n\t\t\tlet line = []\n\t\t\tfor (let x = 0; x < this.state.gridWidth; x++) {\n\t\t\t\tline.push(0);\n\t\t\t}\n\t\t\tgrid.push(line)\n\t\t}\n\n\t\treturn grid\n\n\t}\n\n\tmergePieceToGrid = () => {\n\n\t\tlet score = this.state.score\n\t\tlet lvl = this.state.lvl\n\t\tlet lvlChanged = false\n\t\tconst virtualGrid = this.state.grid\n\t\tlet nbrCleanLine = this.state.nbrCleanLine\n\n\t\tthis.state.piece.mergeData.forEach(element => {\n\t\t\tconst [y, x] = element.split(\"_\")\n\t\t\tvirtualGrid[y][x] = this.state.piece.color\n\t\t});\n\n\t\tlet { cleanGrid, nbrLineCompleted } = this.cleanGrid(virtualGrid)\n\t\tnbrCleanLine += nbrLineCompleted\n\n\n\t\tif (nbrLineCompleted > 0) { \n\t\t\t\n\t\t\t//update score\n\t\t\tscore += parseInt(Math.pow(nbrLineCompleted, 2) * lvl * this.convertLvlToTime())\n\t\t\t\n\t\t\t//changement of lvl\n\t\t\tif (nbrCleanLine >= this.state.linePerLvl) { \n\t\t\t\tnbrCleanLine = 0\n\t\t\t\tlvl++\n\t\t\t\tlvlChanged = true\n\t\t\t\tclearInterval(this.timer)\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tthis.setState({ grid: cleanGrid, piece: null, nbrCleanLine, lvl, score }, () => { \n\t\t\tthis.generatePiece()\n\t\t\tif (lvlChanged) { \n\t\t\t\tthis.launchTimer()\n\t\t\t}\n\t\t})\n\t}\n\n\t//PIECE FUNCTIONS\n\tgenerateNextPieceIndex() { \n\t\treturn Math.floor( Math.random() * pieceCollection.length )\n\t}\n\n\tgeneratePiece = () => {\n\n\t\tlet piece = {}\n\t\tpiece.posY = 0\n\n\t\tlet indexPieceCollection = this.state.nextPieceIndex\n\t\tpiece.color = indexPieceCollection + 1 // +1 because 0 is empty cell\n\n\t\tpiece.grid = pieceCollection[indexPieceCollection]\n\t\t//if value of 0,0 coordinate equal 0 offset y to -1 for init spawn\n\t\tif (piece.grid[0][0] === 0) { \n\t\t\tpiece.posY--\n\t\t}\n\n\t\tpiece.posX = Math.floor( (this.state.gridWidth - piece.grid[0].length) / 2 )\n\t\t\n\t\tpiece.mergeData = []\n\t\tlet coordinate = this.pieceCanBeMove(piece)\n\t\tif (coordinate !== false) {\n\t\t\tpiece.mergeData = coordinate\n\t\t\tthis.setState({ piece, nextPieceIndex: this.generateNextPieceIndex() })\n\t\t} else { \n\t\t\tthis.lostGame()\n\t\t}\n\n\t}\n\n\tpieceCanBeMove = (piece) => { \n\t\t\n\t\tlet coordinate = []\n\n\t\tfor (let y = 0; y < piece.grid.length; y++) {\n\t\t\tfor (let x = 0; x < piece.grid[0].length; x++) {\n\t\t\t\tif (piece.grid[y][x] > 0) { \n\n\t\t\t\t\tif (this.state.grid[y + piece.posY] === undefined) { \n\t\t\t\t\t\treturn false // out of range Y\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.state.grid[y + piece.posY][x + piece.posX] === undefined) { \n\t\t\t\t\t\treturn false //out of range X\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.state.grid[y + piece.posY][x + piece.posX] > 0) { \n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\n\t\t\t\t\tcoordinate.push( (y + piece.posY) + \"_\" + (x + piece.posX) )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn coordinate\n\n\t}\n\n\tpieceMoveToXAxis = (deltaX) => { \n\t\t\n\t\tlet piece = { ...this.state.piece }\n\n\t\tif (piece === null) { \n\t\t\treturn false\n\t\t}\n\n\t\tpiece.posX += deltaX\n\n\t\tlet coordinate = this.pieceCanBeMove(piece)\n\t\tif (coordinate !== false) { \n\t\t\tpiece.mergeData = coordinate\n\t\t\tthis.setState({piece})\n\t\t}\n\n\t}\n\n\n\tpieceMoveToYAxis = (deltaY) => { \n\t\t\n\t\tlet piece = { ...this.state.piece }\n\n\t\tif (piece === null) { \n\t\t\treturn false\n\t\t}\n\n\t\tpiece.posY += deltaY\n\n\t\tlet coordinate = this.pieceCanBeMove(piece)\n\t\tif (coordinate !== false) {\n\t\t\tpiece.mergeData = coordinate\n\t\t\tthis.setState({ piece })\n\t\t} else { \n\t\t\tthis.mergePieceToGrid()\n\t\t}\n\n\t}\n\n\trotatePiece = (sense) => {\n\n\t\tlet piece = { ...this.state.piece }\n\n\t\tif (piece === null) { \n\t\t\treturn false\n\t\t}\n\n\t\tlet newGrid = []\n\n\t\tif (sense === \"right\") {\n\t\t\tfor (let x = 0; x < piece.grid[0].length; x++) {\n\t\t\t\tlet line = []\n\t\t\t\tfor (let y = piece.grid.length - 1; y > -1; y--) {\n\t\t\t\t\tline.push(piece.grid[y][x]);\n\t\t\t\t}\n\t\t\t\tnewGrid.push(line)\n\t\t\t}\n\t\t} else if ( sense === \"left\") { \n\t\t\tfor (let x = piece.grid[0].length - 1; x > -1; x--) {\n\t\t\t\tlet line = []\n\t\t\t\tfor (let y = 0; y < piece.grid.length; y++) {\n\t\t\t\t\tline.push( piece.grid[y][x] );\n\t\t\t\t}\n\t\t\t\tnewGrid.push( line )\n\t\t\t}\n\t\t}\n\n\t\tpiece.grid = newGrid\n\n\t\tlet coordinate = this.pieceCanBeMove(piece)\n\t\tif (coordinate !== false) {\n\t\t\tpiece.mergeData = coordinate\n\t\t\tthis.setState({ piece })\n\t\t} else { \n\n\t\t\tlet isPositionUpdate = false\n\n\t\t\t//if x is out of range\n\t\t\tif (piece.posX < 0) {\n\t\t\t\tpiece.posX = 0\n\t\t\t\tisPositionUpdate = true\n\t\t\t} else if (piece.grid[0].length + piece.posX  > this.state.gridWidth) {\n\t\t\t\tpiece.posX = this.state.gridWidth - piece.grid[0].length\n\t\t\t\tisPositionUpdate = true\n\t\t\t} else if (piece.posY < 0) {\n\t\t\t\tpiece.posY = 0\n\t\t\t\tisPositionUpdate = true\n\t\t\t}\n\n\t\t\tif (isPositionUpdate) { \n\t\t\t\tcoordinate = this.pieceCanBeMove(piece)\n\t\t\t\tif (coordinate !== false) {\n\t\t\t\t\tpiece.mergeData = coordinate\n\t\t\t\t\tthis.setState({ piece })\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tcleanGrid = (grid) => {\n\n\t\tlet cleanGrid = []\n\t\tlet nbrLineCompleted = 0\n\n\t\tfor (let y = 0; y < this.state.gridHeight; y++) {\n\n\t\t\tlet lineCompleted = true\n\t\t\tfor (let x = 0; x < this.state.gridWidth; x++) {\n\t\t\t\tif (grid[y][x] === 0) { \n\t\t\t\t\tlineCompleted = false\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (lineCompleted === false) {\n\t\t\t\tcleanGrid.push(grid[y])\n\t\t\t}\n\n\t\t}\n\n\t\tnbrLineCompleted = this.state.gridHeight - cleanGrid.length\n\n\t\tfor (let i = 0; i < nbrLineCompleted; i++) { \n\t\t\tcleanGrid.unshift( this.makeCleanLine(this.state.gridWidth) )\n\t\t}\n\n\t\treturn { cleanGrid, nbrLineCompleted}\n\n\t}\n\n\tmakeCleanLine(width) { \n\t\tlet line = []\n\t\tfor (let x = 0; x < width; x++) {\n\t\t\tline.push(0)\n\t\t}\n\t\treturn line\n\t}\n\n\trender() { \n\n\t\tif (this.state.isLostGame) { \n\t\t\treturn (\n\t\t\t\t<div id=\"wrapper_lost_game\">\n\t\t\t\t\t<h2>Game Over</h2>\n\t\t\t\t\t<div className=\"score\">Score : {this.state.score}</div>\n\t\t\t\t\t<div id=\"menu\">\n\t\t\t\t\t\t<button onClick={() => this.props.actions.launchMenu()}>Back</button>\n\t\t\t\t\t\t<button onClick={() => this.initGame()}>Play again</button>\n\t\t\t\t\t</div>\t\t\t\t\t\n\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div id=\"wrapper_grid\">\t\n\t\t\t\t<LevelAndLine lvl={this.state.lvl} line={this.state.nbrCleanLine} linePerLvl={this.state.linePerLvl} />\n\t\t\t\t{\n\t\t\t\t\tthis.state.nextPieceIndex !== null &&\n\t\t\t\t\t<NextPiece grid={pieceCollection[this.state.nextPieceIndex]} color={this.state.nextPieceIndex + 1} />\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tthis.state.grid !== null &&\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\tgrid={this.state.grid}\n\t\t\t\t\t\t\tpiece={this.state.piece}\n\t\t\t\t\t\t\tprojection={this.state.options.helpers[\"projection\"]}\n\t\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t<TimeAndScore score={this.state.score} globalTimer={this.globalTimer} />\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default Game;\n","import React from 'react'\nimport \"./Modal.scss\"\n\nfunction Modal({ message, active }) {\n\treturn (\n\t\t<div id=\"modal\" className={(active === true) ? \"open\" : \"\"}>\n\t\t\t<div className=\"mask\"></div>\n\t\t\t<div className=\"container auto\">\n\t\t\t\t<div className=\"message\">\n\t\t\t\t\t{message}\n\t\t\t\t</div>\n\t\t\t\t<button className=\"close\">&times;</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Modal;\n\n\n\n\n\n","import React, { Component } from 'react'\nimport Modal from \"./Modal\"\nimport touchAndHelper from \"./touchAndHelper\"\nimport './Options.scss'\n\nclass Options extends Component {\n\n\tstate = {\n\t\toptions: {\n\t\t\ttouch: {\n\t\t\t\t\"bottom\": 40,\n\t\t\t\t\"left\": 37,\n\t\t\t\t\"right\": 39,\n\t\t\t\t\"rotateLeft\": 89,\n\t\t\t\t\"rotateRight\":88\n\t\t\t},\n\t\t\thelpers: {\n\t\t\t\t\"projection\":true\n\t\t\t}\n\t\t},\n\t\tcaptureTouch: false,\n\t\tmodalActive:false\n\t}\n\n\tcomponentDidMount() { \n\t\tlet options = JSON.parse(localStorage.getItem(\"tetris_options\"))\n\t\tif (options === null || options === \"\") { \n\t\t\toptions = touchAndHelper\n\t\t}\n\t\tthis.setState({ options }, () => {\n\t\t\twindow.addEventListener(\"keydown\", this.keydownActions)\n\t\t})\n\t}\n\n\tkeydownActions = (e) => { \n\t\tif (this.state.captureTouch !== false) {\n\t\t\tlet touch = this.state.options.touch\n\t\t\ttouch[ this.state.captureTouch ] = e.keyCode\n\t\t\tthis.setState({ touch, captureTouch:false, modalActive:false })\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tlocalStorage.setItem(\"tetris_options\", JSON.stringify(this.state.options))\n\t\twindow.removeEventListener(\"keydown\", this.keydownActions)\n\t}\n\n\tupdateTouch = (touch) => {\n\t\tthis.setState({captureTouch:touch, modalActive:true})\n\t}\n\n\tupdateHelper = (helper) => {\n\n\t\tlet helpers = this.state.options.helpers\n\n\t\tif (helpers[helper] === true) {\n\t\t\thelpers[helper] = false\n\t\t} else { \n\t\t\thelpers[helper] = true\n\t\t}\n\t\t\n\t\tthis.setState({ helpers })\n\t}\n\n\trender() { \n\t\treturn (\n\t\t\t<div id=\"options\">\n\n\t\t\t\t<Modal active={this.state.modalActive} message={\"Push on touch on your keyboard !\"}/>\n\n\t\t\t\t<h1>Options</h1>\n\t\t\t\t<p className=\"description\">For change option, click on shape and press you favorite touch</p>\n\t\t\t\t<h2>Liste des options</h2>\n\t\t\t\t{\n\t\t\t\t\tObject.keys(this.state.options.touch).map((t) => {\n\t\t\t\t\t\treturn <button className={\"option \" + t} onClick={() => this.updateTouch(t)} key={\"touch_\" + t}>\n\t\t\t\t\t\t\t<span className=\"shape\"></span>\n\t\t\t\t\t\t\t<span className=\"touch\">{t} ({this.state.options.touch[t]})</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t<h2>Liste des helpers</h2>\n\t\t\t\t{\n\t\t\t\t\tObject.keys(this.state.options.helpers).map((h) => {\n\t\t\t\t\t\treturn <button className={\"option \" + h} onClick={() => this.updateHelper(h)} key={\"helper_\" + h}>\n\t\t\t\t\t\t\t<span className=\"shape\"></span>\n\t\t\t\t\t\t\t<span className=\"shape2\"></span>\n\t\t\t\t\t\t\t<span className=\"touch\">{h} ({\n\t\t\t\t\t\t\t\t(this.state.options.helpers[h] === true) ? \"ON\" : \"OFF\"\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t<button className=\"back\" onClick={ () => this.props.actions.launchMenu() }>Back</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Options;","import React, { Component } from 'react'\nimport './App.scss'\nimport Menu from './Menu'\nimport Game from './Game'\nimport Options from './Options'\nimport ReactGA from 'react-ga';\n\nclass App extends Component{\n\n\tstate = {\n\t\tcomponentToLoaded: null,\n\t\tactions: null\n\t}\n\n\tcomponentDidMount() { \n\t\t\n\t\tthis.launchMenu()\n\n\t\tReactGA.initialize(\"UA-114649554-2\");\n\t\tReactGA.pageview(window.location.pathname + window.location.search)\n\t\t\n\t}\n\n\tlaunchGame = () => {\n\t\tthis.setState({\n\t\t\tcomponentToLoaded: Game,\n\t\t\tactions: {\n\t\t\t\tlaunchMenu: () => this.launchMenu()\n\t\t\t}\n\t\t})\n\t}\n\n\tlaunchOptions = () => {\n\t\tthis.setState({\n\t\t\tcomponentToLoaded: Options,\n\t\t\tactions: {\n\t\t\t\tlaunchMenu: () => this.launchMenu()\n\t\t\t}\n\t\t})\n\t}\n\n\tlaunchMenu = () => {\n\t\tthis.setState({\n\t\t\tcomponentToLoaded: Menu,\n\t\t\tactions: {\n\t\t\t\tlaunchGame: () => this.launchGame(),\n\t\t\t\tlaunchOptions: () => this.launchOptions()\n\t\t\t}\n\t\t})\n\t}\n\t\n\t\n\n\trender() { \n\t\treturn (\n\t\t\t<div id=\"wrapper_tetris\">\n\t\t\t\t{\n\t\t\t\t\t(this.state.componentToLoaded !== null) && \n\t\t\t\t\t\t<this.state.componentToLoaded actions={this.state.actions} />\n\t\t\t\t}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}